<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hyizhou.framework.mapper.UsersMapper">
    <resultMap id="usersMap" type="top.hyizhou.framework.entity.User">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_admin" jdbcType="BOOLEAN" property="isAdmin"/>
        <result column="is_delete" jdbcType="BOOLEAN" property="isDelete"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="account_name" jdbcType="VARCHAR" property="accountName"/>
        <result column="Column2" jdbcType="VARCHAR" property="column2"/>
    </resultMap>

    <!--插入语句前面部分，不包括id和create_time字段-->
    <sql id="insert_sql">
        insert into users
            <trim prefix="(" suffixOverrides="," suffix=")">
                <if test="name != null">
                    `name`,
                </if>
                <if test="password != null">
                  `password`,
                </if>
                <if test="isAdmin != null">
                  `is_admin`,
                </if>
                <if test="isDelete != null">
                  `is_delete`,
                </if>
                <if test="email != null">
                  `email`,
                </if>
                <if test="phone != null">
                  `phone`,
                </if>
                <if test="accountName != null">
                  `account_name`,
                </if>
                <if test="column2 != null">
                  `Column2`
                </if>
            </trim>
        values
            <trim suffix=")" prefix="(" suffixOverrides=",">
                <if test="name != null">
                    #{name},
                </if>
                <if test="password != null">
                    #{password},
                </if>
                <if test="isAdmin != null">
                    #{isAdmin},
                </if>
                <if test="isDelete != null">
                    #{isDelete},
                </if>
                <if test="email != null">
                    #{email},
                </if>
                <if test="phone != null">
                    #{phone},
                </if>
                <if test="accountName != null">
                    #{accountName},
                </if>
                <if test="column2 != null">
                    #{column2}
                </if>
            </trim>
    </sql>


    <select id="findById" resultMap="usersMap">
        select * from users where id = #{id}
    </select>


    <insert id="insertOne" useGeneratedKeys="true" keyProperty="id">
        <include refid="insert_sql"/>
    </insert>

    <delete id="deleteById">
        delete from users where `id`=#{id}
    </delete>

    <update id="update">
        update users
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="password != null">
                `password` = #{password},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="isAdmin != null">
                `is_admin` = #{isAdmin},
            </if>
            <if test="isDelete != null">
                `is_delete` = #{isDelete},
            </if>
            <if test="email != null">
                `email` = #{email},
            </if>
            <if test="phone != null">
                `phone` = #{phone},
            </if>
            <if test="accountName != null">
                `account_name` = #{accountName},
            </if>
            <if test="column2 != null">
                `Column2` = #{column2}
            </if>
        </set>
        <where>
            `id`=#{id}
        </where>
    </update>

    <select id="countAccountName" resultType="java.lang.Integer">
        select count(*) from users where `account_name`=#{accountName}
    </select>

    <select id="findByAccountName" resultMap="usersMap">
        select * from users where `account_name`=#{accountName};
    </select>

    <select id="findByVague" resultMap="usersMap">
        select * from users
        <where>
            <if test="user.name != null">
                name like '%${user.name}%'
            </if>
            <if test="user.email != null">
                and email like '%${user.email}%'
            </if>
            <if test="user.phone != null">
                and phone like '%${user.phone}%'
            </if>
            <if test="user.accountName != null">
                and account_name like '%${user.accountName}%'
            </if>
        </where>
        limit  #{page},#{size}
    </select>
</mapper>
